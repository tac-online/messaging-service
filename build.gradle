plugins {
    id 'java'
    id 'application'
    id 'com.bmuschko.docker-remote-api' version '6.4.0'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

mainClassName = 'de.johanneswirth.tac.gameserver.GameServerApp'

group 'de.johannes-wirth'
version '0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}




dependencies {
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: '1.3.15'
    compile group: 'io.dropwizard', name: 'dropwizard-client', version: '1.3.15'
    compile group: 'com.liveperson', name: 'dropwizard-websockets', version: '1.3.14'
    compile group: 'io.dropwizard', name: 'dropwizard-json-logging', version: '1.3.15'
    compile group: 'io.dropwizard.modules', name: 'dropwizard-discovery', version: '1.3.11'
    compile group: 'de.johannes-wirth', name: 'tac-backend-common', version: '0.1'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.5.2'
    compile 'com.auth0:java-jwt:3.8.3'
}

shadowJar {
    mergeServiceFiles()
    archiveClassifier = null
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

jar {
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest { attributes 'Main-Class': mainClassName }
}

task copyScript(type: Copy) {
    from file("startup.sh")
    into file("build/docker/")
}

task copyScript2(type: Copy) {
    from file("build/scripts/" + rootProject.name)
    into file("build/docker/")
}

task copyJar(type: Copy) {
    from file("build/libs/" + rootProject.name + "-" + version + ".jar")
    into file("build/docker/")
}

task excludeLibraries(type: Delete) {
    delete fileTree(dir: "build/docker/${rootProject.name}/lib")
}

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

task createDockerfile(type: Dockerfile) {
    from 'java:openjdk-8-jre'
    label(['maintainer': 'Johannes Wirth "johannes-wirth@posteo.de"'])
    workingDir '/' + rootProject.name
    addFile(rootProject.name, 'bin/' + rootProject.name)
    addFile(rootProject.name + '-' + version + '.jar', 'lib/' + rootProject.name + '-' + version + '.jar')
    exposePort(8080,8081)
    entryPoint 'sh'
    defaultCommand 'startup.sh'
    addFile('startup.sh', 'startup.sh')
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    images.add(rootProject.name + ":" + version)
}

buildImage.dependsOn excludeLibraries
buildImage.dependsOn copyScript
buildImage.dependsOn copyScript2
buildImage.dependsOn copyJar
copyJar.dependsOn shadowJar

task tagImage(type:Exec) {
    dependsOn buildImage
    //on windows:
    commandLine 'cmd', '/c', 'docker tag ' + rootProject.name + ":" + version + " jw78guro/" + rootProject.name + ":" + version
}

task publishImage(type:Exec) {
    dependsOn tagImage
    //on windows:
    commandLine 'cmd', '/c', 'docker push jw78guro/' + rootProject.name + ":" + version
}
